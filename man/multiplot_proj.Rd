% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiplot_proj.R
\name{multiplot_proj}
\alias{multiplot_proj}
\title{multiplot.proj}
\usage{
multiplot_proj(
  high.d1 = testing.list[[1]][3][[1]]$trajectories,
  med.d1 = testing.list[[1]][2][[1]]$trajectories,
  low.d1 = testing.list[[1]][1][[1]]$trajectories,
  high.d2 = testing.list[[2]][3][[1]]$trajectories,
  med.d2 = testing.list[[2]][2][[1]]$trajectories,
  low.d2 = testing.list[[2]][1][[1]]$trajectories,
  high.d3 = testing.list[[3]][3][[1]]$trajectories,
  med.d3 = testing.list[[3]][2][[1]]$trajectories,
  low.d3 = testing.list[[3]][1][[1]]$trajectories,
  years.plot = 50,
  ylims,
  spaghetti = FALSE,
  years.to.plot = 50,
  K1plus = 9000,
  InitDepls = InitDepl.vec,
  color.palette = c("forestgreen", "darkorange", "red")
)
}
\arguments{
\item{high.d1}{a list containing output from Projections() (including a matrix of simulation trajectories) - this corresponds to the highest bycatch level (thus "high") and the depletion level (\code{d1} indicates the lowest starting depletion level)}

\item{years.plot}{How many years to plot}

\item{ylims}{}

\item{spaghetti}{Either FALSE or a number, where the number is how many simulations to show from the same scenario}

\item{years.to.plot}{How many years to plot on the x axis}

\item{K1plus}{The carrying capacity in terms of the 1+ component of the population}

\item{InitDepls}{A vector of initial depletion levels; if the user has selected "show multiple depletion levels" in the app, this vector is automatically the depletion they entered (d), 75 percent of that value ("low" depletion) and 125 percent of that value ("high depletion")}

\item{color.palette}{A three-element vector giving the color values for low, medium, and high bycatch}
}
\value{
A plot of 50% and 90% confidence intervals of population projections (if \code{spaghetti ==FALSE}) or a spaghetti plot (if \code{spaghetti ==TRUE}),  from \code{Projections()}.
}
\description{
plots outputs from several projections that result from a Projections() call, with multiple depletion levels.
}
